 2021-05-20
	c-vs-flex/big_file.{zip,txt} is now shuffled. Minor edits on readmes.

2021-05-21
	lex-c.awk v1.0 -> v1.1:
	User callbacks are no longer implement through function pointers. They are
	now static functions provided on compile time.

2021-05-23
	lex_lib.awk versioned to v1.01:
	lex_lib_is_included() added.
	FCALL() constant introduced.
	lex_lib_is_included() introduced - produces an error if lex_lib.awk is not
	included; called from each lexer's own BEGIN{}.

	lex-awk.awk v1.0 -> v1.1:
	lex_next() returning the previous token if no new one is found bug fixed.
	'lex_usr_' is now a prefix to user callbacks.
	lex_is_curr_ch_cls(), lex_get_ch_cls() added.
	Unit test code coverage improved.
	Updated to lex_lib.awk.

	lex-c.awk v1.1 -> v1.11:
	Updated to lex_lib.awk.

	run-tests.sh:
	Version info, lex_lib_is_included(), and multiple file i/o tests added.

2021-06-07
	lex-awk.awk v1.0 -> v1.2:
	-vNamePrefix added with 'foo_' prefix tests.

2021-06-08
	lex-c.awk v1.11 -> v1.2:
	-vNamePrefix added with 'foo_' prefix tests.

2021-06-20
	lex-c.awk v1.2 -> v1.3:
	bsearch keyword lookup now limits the number of lookups by first letter, not
	by keyword length.
	readme_lex-c.txt updated with new runs.
	
	misc:
	Mass renamed arr_*() to vect_*(). Checked, but weird names might still
	exist.
	
	lex_lib.awk v1.01 -> v1.02
	vect_to_array() added

	run-tests.sh:
	c_test_kw_len added.

2021-10-05
	lex-awk.awk v1.2 -> v1.3
	'if (_B_lex_peek_ch != "")' instead of 'if (_B_lex_peek_ch)' allows to
	remove two '(var "")' conversions. gawk is about a second faster.
	'abc0' test added to the base case tests.

2021-10-09
	lex_lib.awk v1.02 -> v1.1
	lex_lib.awk migrated to awklib; now separate files

2021-10-17
	./src/ directory added
	lex_lib.awk renamed to lb_lib.awk
	lb_lib.awk now generated by make
	lex-{first,c,awk}.awk now generated by make - lb_lib.awk gets appended
	lb_lib.awk now v1.11
	lex-awk.awk v1.3   -> v1.4
	lex-c.awk v1.3     -> v1.4
	lex-first.awk v1.1 -> v1.2

2021-10-18
	lex-awk.awk v1.4 -> v1.41
	'\' and '"' now escape properly

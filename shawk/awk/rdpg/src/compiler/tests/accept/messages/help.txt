--- rdpg-comp.awk ---

LL(1) recursive descent parser generator

Use: rdpg-comp.awk [options] <grammar-file>

Options:
-v FatalErr=<n> - quit after <n> number of errors; <n> is positive
-v WarnErr=1    - treat warnings as errors
-v WarnAll=1    - turn on all warnings
-v WarnReach=1  - warn about unreachable non-terminals
-v WarnEsc=1    - warn about unreachable escapes
-v Check=1      - quit after all grammar checks; don't generate code
-v Grammar=1    - print the expanded grammar and quit
-v Rules=1      - print the list of rules and quit
-v Sets=1       - print the grammar sets and quit
-v Table=1      - print the parse table and quit
-v Example=1    - print example
-v Help=1       - print this screen
-v Version=1    - print version

-v Imm=<1|0> - turn on/off immediate error detection in epsilon productions.
When off, less sets and predictions are generated, which makes certain hacks
possible (e.g. inserting tokens into the input stream). Errors get detected next
time the input is advanced rather than immediately when the wrong token is seen.
Where in the grammar an error is detected, therefore, becomes less precise.
On by default.

-v Sync=1 - default syncing. Same if no sync option is used. Every non-terminal
function syncs to the the first token found in the follow set of any of its
rules and returns true. Returns false otherwise. Could lead to an error cascade.

-v Sync=0 - no syncing. All non-terminal functions return false. I.e. the parser
stops after a single error is encountered.

-v Sync="<sync-spec>" - customize how syncing happens. Disables synchronization
except for the specification given by <sync-spec>.

<sync-spec>=(<nont>=<tok-csv>|<nont>=<fn>|<nont>=1)[;<sync-spec>]
<nont>    - a non-terminal name. Must exist in the grammar.
<tok-csv> - a list of tokens separated by a comma. The whole <tok-csv> must be
in the follow set of the associated <nont>.
<fn>      - function name in snake case, defined by the user, called when the
associated <nont> is synced. Must return bool reflecting if the synchronization
was successful or not, takes no arguments.
=1        - leave the default synchronization for the associated <nont>.

Example: -vSync="foo=TOK_A,TOK_B;bar=1;baz=mysync_baz"
foo will be synced only on TOK_A and TOK_B.
bar will have its default synchronization.
baz will be synchronized by a call to mysync_baz().
All other non-terminals in the grammar will have no synchronization.

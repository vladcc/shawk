#
# The venerable infix calculator example. Includes the most important aspects of
# rdpg grammar: left + right associativity, alternation, modifiers, and actions.
#
# Non-terminals are lowercase, terminals are upper case. Both can begin with a
# letter or _ and be followed by more letters _ and digits.
#
# Actions are called 'escapes' because they have the form:
# \<fname>
# <fname> has the same lexical rules as non-terminals and is a user defined
# function the parser will call while parsing.
#
# Modifiers apply to the previous non-terminal like so:
# <nont>? - zero or one times <nont>
# <nont>* - zero or more times <nont>
# <nont>+ - one or more times <nont>
#
# A grammar file has to begin with:
# start : <top-sym>[mod] <eoi-token>
#

start : expr+ EOI ;

expr : \on_expr_start expr_add_sub? SEMI \on_expr_end ;

expr_add_sub : expr_mul_div add_sub* ;

add_sub : PLUS  expr_mul_div \on_add
        | MINUS expr_mul_div \on_sub ;

expr_mul_div : expr_expon mul_div* ;

mul_div : MUL expr_expon \on_mul
        | DIV expr_expon \on_div ;

expr_expon : expr_base expon? ;

expon : POW expr_expon \on_pow ;

expr_base : MINUS base \on_neg
          | base ;

base : NUMBER \on_number
     | L_PAR expr_add_sub R_PAR ;
